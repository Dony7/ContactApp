{"version":3,"sources":["components/layout/Header.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/contacts/AddContact.js","components/pages/About.js","components/pages/NotFound.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","react_default","a","createElement","className","href","Link","to","defaultProps","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","cur","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","name","email","phone","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","children","Component","Consumer","Contact","showContactInfo","showClick","deleteClick","delete","t0","_this2","contact","onClick","bind","Contacts","Fragment","contacts_Contact","AddContact","errors","change","e","defineProperty","target","submit","_this$state","newContact","preventDefault","post","history","push","_this$state2","onSubmit","htmlFor","placeholder","onChange","required","About","NotFound","EditContact","updContact","match","params","put","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2f16c03b.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './header.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n\r\n    const { branding } = props;\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"branding title\">{branding}</a>\r\n                <Link to='/' className='header-link'><i className=\"fas fa-home\"></i> Home</Link>\r\n                <Link to='/about' className='header-link'><i className=\"fas fa-question\"></i> About</Link>\r\n                <Link to='/contact/add' className='header-link'><i className=\"fas fa-plus\"></i> Add</Link>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding: 'Contact App'\r\n}\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(cur => {\r\n                    return cur.id !== action.payload;\r\n                })\r\n            }\r\n\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };\r\n\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(cur => cur.id === action.payload.id ? cur = action.payload : cur)\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [\r\n            {\r\n                id: 1,\r\n                name: 'John Doe',\r\n                email: 'johndoe@gmail.com',\r\n                phone: '777-777-7777'\r\n            },\r\n            {\r\n                id: 2,\r\n                name: 'Steve Jones',\r\n                email: 'sjones@gmail.com',\r\n                phone: '555-555-5555'\r\n            },\r\n            {\r\n                id: 3,\r\n                name: 'Angela Jones',\r\n                email: 'aj93@gmail.com',\r\n                phone: '222-222-2222'\r\n            }\r\n        ],\r\n\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n        this.setState({\r\n            contacts: res.data\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Consumer } from '../../context'\r\n\r\nimport './contact.css';\r\n\r\nclass Contact extends Component {\r\n    state = {\r\n        showContactInfo: false\r\n    };\r\n\r\n    showClick = () => {\r\n        this.setState({\r\n            showContactInfo: !this.state.showContactInfo\r\n        })\r\n\r\n    }\r\n\r\n    deleteClick = async (id, dispatch) => {\r\n        try {\r\n            await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n            dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n        } catch{\r\n            dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const { contact } = this.props;\r\n        const { showContactInfo } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className='card-body'>\r\n                            <div className=\"card-header\">\r\n                                <h1 onClick={this.showClick} >{contact.name} <i className=\"fas fa-angle-down\" /></h1>\r\n\r\n                                <Link to={`contact/edit/${contact.id}`}>\r\n                                    <i className=\"fas fa-edit\" ></i>\r\n                                </Link>\r\n                                <i className=\"fas fa-trash-alt\" onClick={this.deleteClick.bind(this, contact.id, dispatch)}></i>\r\n                            </div>\r\n                            {showContactInfo ? <ul className='list-group'>\r\n                                <li className='list-item'><span>Email:</span> {contact.email}</li>\r\n                                <li className='list-item'><span>Phone:</span> {contact.phone}</li>\r\n                            </ul> : null}\r\n\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport './contact.css';\r\n\r\nimport { Consumer } from '../../context'\r\nimport './contact.css'\r\n\r\nclass Contacts extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return (\r\n                        <React.Fragment>\r\n                            <div className=\"title-container\">\r\n                                <h1 className=\"contacts-title\"><span>Contact</span> List</h1>\r\n                            </div>\r\n                            {contacts.map(cur => (\r\n                                <Contact\r\n                                    key={cur.id}\r\n                                    contact={cur}\r\n                                />\r\n                            ))}\r\n                        </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Contacts;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\nimport './addcontact.css'\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        id: '',\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    change = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    submit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        if (name === '') {\r\n            this.setState({\r\n                errors: {\r\n                    name: 'A name is required!'\r\n                }\r\n            })\r\n        } else if (email === '') {\r\n            this.setState({\r\n                errors: {\r\n                    email: 'An email address is required!'\r\n                }\r\n            })\r\n        } else if (phone === '') {\r\n            this.setState({\r\n                errors: {\r\n                    phone: 'A phone number is required!'\r\n                }\r\n            })\r\n        }\r\n\r\n        const newContact = {\r\n            name: name,\r\n            email: email,\r\n            phone: phone\r\n        }\r\n\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n\r\n        dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: ''\r\n        })\r\n\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className='addcontact-card'>\r\n                            <div className='addcontact-header'><h4>Add Contact</h4></div>\r\n                            <form onSubmit={this.submit.bind(this, dispatch)}>\r\n                                <div className=\"form\">\r\n                                    <label htmlFor=\"name\">Name:</label>\r\n                                    <input type=\"text\" name='name' placeholder='Enter Name...' value={name} onChange={this.change} className=\"form-control form-control-lg\" required />\r\n                                    <label htmlFor=\"email\">Email:</label>\r\n                                    <input type=\"email\" name='email' placeholder='Enter Email...' value={email} onChange={this.change} required />\r\n                                    <label htmlFor=\"phone\">Phone Number:</label>\r\n                                    <input type=\"text\" name='phone' placeholder='Enter Phone Number...' value={phone} onChange={this.change} required />\r\n                                </div>\r\n                                <input type=\"submit\" value=\"Add New Contact\" className='form-button' />\r\n                            </form>\r\n                        </div>\r\n                    )\r\n                }}\r\n\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddContact;\r\n","import React from 'react'\r\nimport './about.css';\r\n\r\nexport default function About() {\r\n    return (\r\n        <div className='about-container'>\r\n            <h1>About Contact App</h1>\r\n            <p>App to manage contact list.</p>\r\n            <p>Version 1</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './notfound.css'\r\nconst NotFound = () => {\r\n    return (\r\n        <div className='notfound-container'>\r\n            <h1>404 Page not found</h1>\r\n            <p>Sorry, that page does not exist</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\nimport './addcontact.css'\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        id: '',\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    change = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n        const contact = res.data;\r\n\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        })\r\n    }\r\n\r\n    submit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        if (name === '') {\r\n            this.setState({\r\n                errors: {\r\n                    name: 'A name is required!'\r\n                }\r\n            })\r\n        } else if (email === '') {\r\n            this.setState({\r\n                errors: {\r\n                    email: 'An email address is required!'\r\n                }\r\n            })\r\n        } else if (phone === '') {\r\n            this.setState({\r\n                errors: {\r\n                    phone: 'A phone number is required!'\r\n                }\r\n            })\r\n        }\r\n\r\n        const updContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const { id } = this.props.match.params;\r\n\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n\r\n        dispatch({ type: 'UPDATE_CONTACT', payload: res.data })\r\n\r\n        // Clear State\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: ''\r\n        })\r\n\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className='addcontact-card'>\r\n                            <div className='addcontact-header'><h4>Edit Contact</h4></div>\r\n                            <form onSubmit={this.submit.bind(this, dispatch)}>\r\n                                <div className=\"form\">\r\n                                    <label htmlFor=\"name\">Name:</label>\r\n                                    <input type=\"text\" name='name' placeholder='Enter Name...' value={name} onChange={this.change} className=\"form-control form-control-lg\" required />\r\n                                    <label htmlFor=\"email\">Email:</label>\r\n                                    <input type=\"email\" name='email' placeholder='Enter Email...' value={email} onChange={this.change} required />\r\n                                    <label htmlFor=\"phone\">Phone Number:</label>\r\n                                    <input type=\"text\" name='phone' placeholder='Enter Phone Number...' value={phone} onChange={this.change} required />\r\n                                </div>\r\n                                <input type=\"submit\" value=\"Update\" className='form-button' />\r\n                            </form>\r\n                        </div>\r\n                    )\r\n                }}\r\n\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditContact;\r\n","import React, { Component } from 'react';\nimport Header from './components/layout/Header';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport EditContact from './components/contacts/EditContact';\n\nimport { Provider } from './context';\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding='Contact App' />\n            <Switch>\n\n              <Route exact path='/' component={Contacts} />\n              <Route exact path='/contact/add' component={AddContact} />\n              <Route exact path='/about' component={About} />\n              <Route exact path='/contact/edit/:id' component={EditContact} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}